{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,WAAYC,SAASC,cAAc,SACnCC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAGjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAWtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEL,SAAUA,EAAUJ,MAAOA,IAErCU,EAAO,CAAEN,SAAUA,EAAUJ,MAAOA,G,GAErCA,E,IAyBPJ,EAAKC,WAAWe,iBAAiB,UAnBjC,SAAsBC,GACpBA,EAAMC,iBAEN,IADA,IAAIC,EAAaC,SAASpB,EAAKI,MAAMiB,OAC5BC,EAAI,EAAGA,EAAItB,EAAKM,OAAOe,MAAOC,GAAK,EAAG,CAE7Cf,EADiBe,EACOH,GACrBI,MAAK,SAAAC,GAEJ1B,EAAA2B,OAAOC,QAAQ,uBAA0CC,OAAjBH,EAAEhB,SAAS,QAAcmB,OAARH,EAAEpB,MAAM,M,IAElEwB,OAAM,SAAAJ,GAEL1B,EAAA2B,OAAOI,QAAQ,sBAAuCF,OAAjBH,EAAEhB,SAAS,QAAcmB,OAARH,EAAEpB,MAAM,M,IAGlEe,GAAcC,SAASpB,EAAKK,KAAKgB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  formSubmit: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nfunction addPromisses(event) {\n  event.preventDefault(); // prevent form from reloading during submit\n  let item_delay = parseInt(refs.delay.value);\n  for (let i = 0; i < refs.amount.value; i += 1) {\n    const position = i;\n    createPromise(position, item_delay)\n      .then(e => {\n        // console.log(`✅ Fulfilled promise ${e.position} in ${e.delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${e.position} in ${e.delay}ms`);\n      })\n      .catch(e => {\n        // console.log(`❌ Rejected promise ${e.position} in ${e.delay}ms`);\n        Notify.failure(`❌ Rejected promise ${e.position} in ${e.delay}ms`);\n      });\n\n    item_delay += parseInt(refs.step.value);\n  }\n}\n\nrefs.formSubmit.addEventListener('submit', addPromisses);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formSubmit","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","item_delay","parseInt","value","i","then","e","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.33d43a47.js.map"}